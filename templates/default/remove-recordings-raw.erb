#!/usr/bin/ruby
# encoding: UTF-8

require 'date'
require 'logger'
require 'fileutils'

def record_id_to_timestamp(r)
    r.split("-")[1].to_i / 1000
end

def record_id_to_date(r)
    DateTime.strptime(record_id_to_timestamp(r).to_s, '%s')
end

logger = Logger.new("/var/log/bigbluebutton/remove-recordings-raw.log")
logger.level = Logger::INFO
recording_raw_max_retention = DateTime.now - <%= @recording_raw_max_retention %>

recordings = Dir.glob("/var/bigbluebutton/recording/raw/*") \
    .map{ |r| File.basename(r) } \
    .select{ |r| (r =~ /\w+-\d+/ && \
                  record_id_to_date(r) < recording_raw_max_retention && \
                  ! Dir.glob("/var/bigbluebutton/published/**/#{r}").empty?) } \
    .sort{ |a,b| record_id_to_timestamp(a) <=> record_id_to_timestamp(b) }

if ! recordings.empty?
    logger.info "Max retention: #{recording_raw_max_retention.to_s}"
    recordings.each do |r|
        logger.info "Removing #{r} from #{record_id_to_date(r).to_s}"
        FileUtils.rm_rf "/var/bigbluebutton/recording/raw/#{r}"
    end
end
